version: 1.0.{build}
configuration: Release
platform: Any CPU
environment:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
cache: '%USERPROFILE%\.nuget\packages'
before_build:
- cmd: dotnet restore
- ps: >-
    Get-ChildItem -Path $ENV:APPVEYOR_BUILD_FOLDER -Recurse â€“File -Filter project.json | foreach {
      $jsonFile = Get-Content $_.FullName -raw | ConvertFrom-Json
      if($jsonFile.version)
      {
          $jsonFile.version = $ENV:APPVEYOR_BUILD_VERSION
          $jsonFile | ConvertTo-Json -Depth 999 | Out-File $_.FullName
      }
    }
build:
  verbosity: normal
after_build:
- dotnet pack "src\utes.Xunit" -c %CONFIGURATION% --no-build --version-suffix %APPVEYOR_BUILD_VERSION% -o artifacts
test_script:
- ps: >-
    $resultsFile = $ENV:APPVEYOR_BUILD_FOLDER + '\results.xml'

    $openCoverConsole = $ENV:USERPROFILE + '\.nuget\packages\OpenCover\4.6.519\tools\OpenCover.Console.exe'

    $target = '-target:C:\Program Files\dotnet\dotnet.exe'

    $targetArgs = '-targetargs: test ' + $ENV:APPVEYOR_BUILD_FOLDER + '\tests\utes.WebApplicationAssemblyStorage.Tests -c ' + $ENV:CONFIGURATION

    $filter = '-filter:+[utes.WebApplicationAssemblyStorage*]* -[utes.WebApplicationAssemblyStorage.Tests]* -[utes.WebApplicationAssemblyStorage]*MyAssemblyLoadContext*'

    & $openCoverConsole $target $targetArgs '-register:user' $filter '-oldStyle'

    $targetArgs = '-targetargs: test ' + $ENV:APPVEYOR_BUILD_FOLDER + '\tests\utes.WebApp.Tests -c ' + $ENV:CONFIGURATION

    $filter = '-filter:+[utes.WebApp*]* -[utes.WebApp.Tests]* -[utes.WebApp]*Startup* -[utes.WebApp]*Program* -[utes.WebApp]*Models* -[utes.WebApp]*Extensions* -[utes.WebApp]*Resources*'

    $output = '-output:' + $resultsFile

    & $openCoverConsole $target $targetArgs '-register:user' $filter $output '-mergeoutput' '-oldStyle'

    $artifactsFolder = $ENV:APPVEYOR_BUILD_FOLDER + '\artifacts'

    Copy-Item $resultsFile $artifactsFolder

    $ENV:PATH = 'C:\\Python34;C:\\Python34\\Scripts;' + $ENV:PATH

    python -m pip install --upgrade pip

    pip install git+git://github.com/codecov/codecov-python.git

    codecov -f $resultsFile -X gcov
artifacts:
- path: artifacts\**\*.*
